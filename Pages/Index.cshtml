@page
@using Microsoft.AspNetCore.Identity
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<form id="createRiskForm">
    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <input type="text" id="title" class="form-control" required />
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea id="description" class="form-control" required></textarea>
    </div>

    <div class="mb-3">
        <label for="severity" class="form-label">Severity</label>
        <select id="severity" class="form-select" required>
            <option value="Low">Low</option>
            <option value="Medium">Medium</option>
            <option value="High">High</option>
        </select>
    </div>

    <div class="mb-3">
        <label for="likelihood" class="form-label">Likelihood</label>
        <select id="likelihood" class="form-select" required>
            <option value="Low">Low</option>
            <option value="Medium">Medium</option>
            <option value="High">High</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>


@section Scripts {
    <script>
        $(document).ready(function () {
            // Загружаем список департаментов при загрузке страницы
            $.ajax({
                url: 'https://localhost:7248/Department/OnGetDepartmentsAsync',  // Путь к методу контроллера
                type: 'GET',
                success: function (data) {
                    $('#departmentDropdown').empty();  // Очистка старых данных
                    if (data.length > 0) {
                        // Добавляем департаменты в выпадающий список
                        $.each(data, function (index, department) {
                            $('#departmentDropdown').append(
                                `<option value="${department.departmentId}">${department.name}</option>`
                            );
                        });
                    } else {
                        $('#departmentDropdown').append('<option>Нет отделов</option>');
                    }
                },
                error: function () {
                    $('#departmentDropdown').empty();
                    $('#departmentDropdown').append('<option>Ошибка загрузки</option>');
                }
            });

            // Обработчик отправки формы
            $("#createRiskForm").on("submit", function (event) {
                event.preventDefault();

                const data = {
                    title: $("#title").val(),
                    description: $("#description").val(),
                    severity: $("#severity").val(),
                    likelihood: $("#likelihood").val(),
                    departmentId: $("#departmentDropdown").val()  // Получаем выбранный ID департамента
                };
                console.log(data);
                // Отправка данных на сервер с использованием fetch
                fetch('https://localhost:7248/Risk/CreateRisk', {
                    method: 'POST',
                    credentials: 'include', // для использования с куки
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Ошибка при создании риска');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Риск успешно создан:', data);
                        // Можно перенаправить на страницу списка рисков
                       
                    })
                    .catch(error => {
                        console.error('Ошибка:', error);
                    });
            });
        });
    </script>

    @Html.AntiForgeryToken()
}
