@page
@model CorporateRiskManagementSystem.Frontend.Pages.AuditorPages.ReportPage
@{
    ViewData["Title"] = "Риски департамента";
    string usernameId = ViewData["username"] as string;

}
<h2>Риски департамента</h2>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Создание отчета</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-light">

    <div class="container mt-5">
        <h2 class="mb-4">Создание аудиторского отчета</h2>
        <div class="mb-3">
            <label for="content" class="form-label">Заключение</label>
            <textarea id="content" class="form-control" rows="5" placeholder="Введите содержание..."></textarea>
        </div>

        <button id="createReportButton" class="btn btn-primary">Создать отчет</button>
    </div>

</body>
</html>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            const departmentId1 = localStorage.getItem('selectedDepartment');

            if (!departmentId1) {
                Swal.fire('Ошибка', 'Не выбран отдел.', 'error');
                return;
            }
            console.log(departmentId1)
            // 👉 Вызов API CanReportBuild
            $.ajax({
                url: `https://localhost:7248/Report/CanReportBuild?departmentId=${parseInt(departmentId1)}`,
                method: 'GET',
                success: function (canBuild) {
                    if (!canBuild) {
                        // Заблокировать поля и кнопку
                        $('#content').prop('disabled', true);  // заблокировать поле ввода
                        $('#submitBtn').prop('disabled', true); // заблокировать кнопку

                        Swal.fire({
                            icon: 'warning',
                            title: 'Невозможно сформировать отчет',
                            text: 'Не все риски отдела были оценены.',
                            confirmButtonText: 'Ок'
                        });
                    }
                },
                error: function () {
                    Swal.fire('Ошибка', 'Ошибка при проверке возможности создания отчета.', 'error');
                }
            });

            // Обработка нажатия кнопки создания отчета
            $('#createReportButton').on('click', function () {
                const content = $('#content').val();          
                const username = '@User.Identity?.Name';
                // Валидация поля description (content)
                if (!content || content.trim() === '') {
                    Swal.fire('Ошибка', 'Поле заключение отчета обязательно для заполнения.', 'warning');
                    return; // Прерываем выполнение, если поле пустое
                }

                $.ajax({
                    url: 'https://localhost:7248/Report/CreateReport',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        departmentId: parseInt(departmentId1),
                        username: username,
                        content: content
                    }),
                    success: function (response) {
                        const fileBlob = new Blob([response], { type: 'application/pdf' });
                        const link = document.createElement('a');
                        link.href = URL.createObjectURL(fileBlob);
                        link.download = 'report.pdf';  // Название файла
                        link.click();
                        Swal.fire('Успех', response.message, 'success');
                    },
                    error: function (xhr) {
                        Swal.fire('Ошибка', xhr.responseText || 'Ошибка при создании отчета.', 'error');
                    }
                });
            });
        });
    </script>
}